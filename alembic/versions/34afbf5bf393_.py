"""

Revision ID: 34afbf5bf393
Revises: 
Create Date: 2021-09-12 21:41:57.703640

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '34afbf5bf393'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hospitals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_hospitals'))
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('can_manage_users', sa.Boolean(), nullable=False),
    sa.Column('can_manage_persons', sa.Boolean(), nullable=False),
    sa.Column('can_manage_roles', sa.Boolean(), nullable=False),
    sa.Column('can_manage_hospitals', sa.Boolean(), nullable=False),
    sa.Column('can_invite', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('name', name=op.f('uq_roles_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_users_role_id_roles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('consumer_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['consumer_id'], ['users.id'], name=op.f('fk_invitations_consumer_id_users')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_invitations_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_invitations'))
    )
    op.create_table('login_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_login_tokens_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_login_tokens'))
    )
    op.create_table('persons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender'), nullable=True),
    sa.Column('abo', sa.Enum('A', 'B', 'AB', 'O', name='abo'), nullable=True),
    sa.Column('rhesus', sa.Enum('POSITIVE', 'NEGATIVE', name='rhesus'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_persons_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_persons')),
    sa.UniqueConstraint('user_id', name=op.f('uq_persons_user_id'))
    )
    op.create_table('listings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('hospital_id', sa.Integer(), nullable=True),
    sa.Column('donor', sa.Boolean(), nullable=False),
    sa.Column('organ', sa.Enum('HEART', name='organ'), nullable=True),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.id'], name=op.f('fk_listings_hospital_id_hospitals')),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_listings_person_id_persons')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_listings'))
    )
    op.create_table('staff',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('hospital_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.id'], name=op.f('fk_staff_hospital_id_hospitals')),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_staff_person_id_persons')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_staff'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('staff')
    op.drop_table('listings')
    op.drop_table('persons')
    op.drop_table('login_tokens')
    op.drop_table('invitations')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('hospitals')
    # ### end Alembic commands ###
